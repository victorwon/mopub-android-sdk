#!/usr/bin/python

import os
import re

import os_helper

WORKSPACE = os.path.abspath('../')
PRIVATE_REPO = WORKSPACE + '/mopub-android'
PUBLIC_REPO = WORKSPACE + '/mopub-android-sdk'
PRIVATE_MOPUB_SDK = PRIVATE_REPO + '/mopub-sdk/src/main/java/com/mopub/mobileads'

TEMP_WORKSPACE = '/tmp/mopub'

if len(os.sys.argv) < 3:
    print 'usage: release <version> <release_branch>'
    exit(1)

version = os.sys.argv[1]
if re.match('^\d+\.\d+\.\d+\.\d+$', version) is None:
    print 'error: improperly formatted version number, expected #.#.#.#'
    exit(1)
version_tag = 'v' + version

release_branch = os.sys.argv[2]
print 'checking out release branch "' + release_branch + '" in ' + os.getcwd()
os_helper.try_system('git checkout ' + release_branch)

# Update version numbers in the private repo (MoPub.java, changelog)
print 'updating version number in MoPub.java'
with open(PRIVATE_MOPUB_SDK + '/MoPub.java', 'r+w') as f:
    output = re.sub(
            r'SDK_VERSION = "(.*?)"',
            r'SDK_VERSION = "' + version + r'"',
            f.read())
    f.seek(0)
    f.write(output)

# Commit to the private repo with the version number
os_helper.try_system('git commit -am "Release: version ' + version + '"')

# Tag private repo with version number

os_helper.try_system('git tag -f -a "' + version_tag + '" -m "Version: ' + version + '"')

# Push the private repo
os_helper.try_system('git pull origin ' + release_branch)
os_helper.try_system('git push origin ' + release_branch)
os_helper.try_system('git push --force origin ' + version_tag)

# cd over to public repository
os_helper.try_chdir(PUBLIC_REPO)

# remember what things used to be like
os_helper.try_system('git checkout master')
os_helper.try_system('git pull')
os_helper.init_temp_staging()
os_helper.try_system('cp -r ./.git ' + os_helper.TEMP_STAGING_PATH  + "/.")

# forget all that for now
os_helper.try_system('rm -rf *')

# import our vision of how things should be in the future
os_helper.try_system('cp -r ' + PRIVATE_REPO + '/* .')

# grant the wisdom to know the difference
os_helper.try_system('rm -rf .git')
os_helper.try_system('cp -r ' + os_helper.TEMP_STAGING_PATH + '/.git .')

# Clear out unwanted libraries
os_helper.try_system('rm -rf ' + PUBLIC_REPO + '/libs')

# Commit with new message
os_helper.try_system('git add -A .')
os_helper.try_system('git commit -am "Release: version ' + version + '"')

# Tag public repo with version number
os_helper.try_system('git tag -f -a "' + version_tag + '" -m "Version: ' + version + '"')

# Prompt for push to public
print 'ready for \'git push --tags origin master\' (make sure to run make_bundles after you are done!)'
